{
  "file_content": "import requests\nimport json\nimport base64\nfrom typing import Dict\n\n\ndef create_branch_with_files(\n    token: str,\n    owner: str,\n    repo: str,\n    branch_name: str,\n    files: Dict[str, str],\n    base_branch: str = \"main\"\n):\n    \"\"\"Create a new branch on GitHub and add files to it.\"\"\"\n    headers = {\n        \"Authorization\": f\"token {token}\",\n        \"Accept\": \"application/vnd.github.v3+json\",\n        \"Content-Type\": \"application/json\"\n    }\n    base_url = f\"https://api.github.com/repos/{owner}/{repo}\"\n\n    try:\n        # 1. Get the SHA of the base branch\n        print(f\"Getting SHA of base branch '{base_branch}'...\")\n        ref_response = requests.get(\n            f\"{base_url}/git/ref/heads/{base_branch}\",\n            headers=headers\n        )\n        if ref_response.status_code == 200:\n            base_sha = ref_response.json()[\"object\"][\"sha\"]\n            print(f\"Base branch SHA: {base_sha}\")\n\n            # 2. Create the new branch\n            print(f\"Creating new branch '{branch_name}'...\")\n            create_ref_data = {\n                \"ref\": f\"refs/heads/{branch_name}\",\n                \"sha\": base_sha\n            }\n            create_response = requests.post(\n                f\"{base_url}/git/refs\",\n                headers=headers,\n                data=json.dumps(create_ref_data)\n            )\n            if create_response.status_code in [201, 422]:  # 422 if branch already exists\n                if create_response.status_code == 201:\n                    print(f\"Branch '{branch_name}' created successfully!\")\n                else:\n                    print(f\"Branch '{branch_name}' already exists, continuing...\")\n\n                # 3. Add files to the branch\n                for file_path, file_content in files.items():\n                    print(f\"Adding file: {file_path}\")\n                    encoded_content = base64.b64encode(file_content.encode('utf-8')).decode('utf-8')\n                    file_response = requests.get(\n                        f\"{base_url}/contents/{file_path}?ref={branch_name}\",\n                        headers=headers\n                    )\n                    file_data = {\n                        \"message\": f\"Add/Update {file_path}\",\n                        \"content\": encoded_content,\n                        \"branch\": branch_name\n                    }\n                    if file_response.status_code == 200:\n                        file_data[\"sha\"] = file_response.json()[\"sha\"]\n                        print(f\"  Updating existing file...\")\n                    else:\n                        print(f\"  Creating new file...\")\n                    put_response = requests.put(\n                        f\"{base_url}/contents/{file_path}\",\n                        headers=headers,\n                        data=json.dumps(file_data)\n                    )\n                    if put_response.status_code in [200, 201]:\n                        print(f\"  File {file_path} added successfully!\")\n                    else:\n                        print(f\"Error adding file {file_path}: {put_response.status_code} - {put_response.text}\")\n                        return False\n                print(f\"All files added to branch '{branch_name}' successfully!\")\n                return True\n            else:\n                print(f\"Error creating branch: {create_response.status_code} - {create_response.text}\")\n                return False\n        else:\n            print(f\"Error getting base branch: {ref_response.status_code} - {ref_response.text}\")\n            return False\n    except requests.exceptions.RequestException as e:\n        print(f\"Request error: {e}\")\n        return False\n    except Exception as e:\n        print(f\"Unexpected error: {e}\")\n        return False\n\n\n# Example usage\nif __name__ == \"__main__\":\n    # Configuration\n    GITHUB_TOKEN = \"your_personal_access_token_here\"\n    REPO_OWNER = \"your_username\"\n    REPO_NAME = \"your_repo_name\"\n    NEW_BRANCH = \"feature/new-files\"\n    \n    # Files to add\n    files_to_add = {\n        \"src/hello.py\": \"print('Hello, World!')\\n\",\n        \"README_NEW.md\": \"# New Feature\\n\\nThis is a new feature branch.\\n\",\n        \"config/settings.json\": '{\\n  \"version\": \"1.0.0\",\\n  \"debug\": true\\n}\\n'\n    }\n    \n    # Create branch with files\n    success = create_branch_with_files(\n        token=GITHUB_TOKEN,\n        owner=REPO_OWNER,\n        repo=REPO_NAME,\n        branch_name=NEW_BRANCH,\n        files=files_to_add,\n        base_branch=\"main\"  # Optional, defaults to \"main\"\n    )\n    \n    if success:\n        print(\"Branch created and files added successfully!\")\n    else:\n        print(\"Failed to create branch or add files.\")"
}
